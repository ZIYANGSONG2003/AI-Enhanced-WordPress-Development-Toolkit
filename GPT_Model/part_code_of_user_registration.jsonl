{"messages": [{"role": "system", "content": "You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."}, {"role": "user", "content": "How can I add a shortcode to display custom content in WordPress?"}, {"role": "assistant", "content": "add_shortcode('custom_content', function ($atts) {\n    $atts = shortcode_atts([\n        'message' => 'Hello, World!'\n    ], $atts, 'custom_content');\n\n    return '<div class=\"custom-content\">' . esc_html($atts['message']) . '</div>';\n});"}]}
{"messages": [{"role": "system", "content": "You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."}, {"role": "user", "content": "How can I register a custom post type for an events calendar?"}, {"role": "assistant", "content": "function register_event_post_type() {\n    $labels = array(\n        'name' => 'Events',\n        'singular_name' => 'Event',\n        'add_new' => 'Add New',\n        'add_new_item' => 'Add New Event',\n        'edit_item' => 'Edit Event',\n        'new_item' => 'New Event',\n        'view_item' => 'View Event',\n        'search_items' => 'Search Events',\n        'not_found' => 'No events found',\n        'not_found_in_trash' => 'No events found in Trash',\n        'all_items' => 'All Events',\n        'menu_name' => 'Events'\n    );\n\n    $args = array(\n        'labels' => $labels,\n        'public' => true,\n        'has_archive' => true,\n        'rewrite' => array('slug' => 'events'),\n        'supports' => array('title', 'editor', 'excerpt', 'thumbnail', 'comments')\n    );\n\n    register_post_type('event', $args);\n}\nadd_action('init', 'register_event_post_type');"}]}
{"messages": [{"role": "system", "content": "You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."}, {"role": "user", "content": "How do I enqueue a custom stylesheet in WordPress?"}, {"role": "assistant", "content": "function enqueue_custom_stylesheet() {\n    wp_enqueue_style('custom-style', get_template_directory_uri() . '/css/custom-style.css');\n}\nadd_action('wp_enqueue_scripts', 'enqueue_custom_stylesheet');"}]}
{"messages": [{"role": "system", "content": "You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."}, {"role": "user", "content": "Can you show me how to create a custom meta box in WordPress?"}, {"role": "assistant", "content": "function add_custom_meta_box() {\n    add_meta_box(\n        'custom_meta_box',\n        'Custom Meta Box',\n        'custom_meta_box_callback',\n        'post'\n    );\n}\nadd_action('add_meta_boxes', 'add_custom_meta_box');\n\nfunction custom_meta_box_callback($post) {\n    $value = get_post_meta($post->ID, '_custom_meta_key', true);\n    echo '<label for=\"custom_meta_field\">Description:</label> ';\n    echo '<input type=\"text\" id=\"custom_meta_field\" name=\"custom_meta_field\" value=\"' . esc_attr($value) . '\" size=\"25\" />';\n}\n\nfunction save_custom_meta_box_data($post_id) {\n    if (array_key_exists('custom_meta_field', $_POST)) {\n        update_post_meta(\n            $post_id,\n            '_custom_meta_key',\n            $_POST['custom_meta_field']\n        );\n    }\n}\nadd_action('save_post', 'save_custom_meta_box_data');"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I add a performance notice in my WordPress plugin?"},{"role":"assistant","content":"add_action('cdp_notices_special', function() {\n\n    if (cdp_check_permissions(wp_get_current_user()) == false) return;\n    if (!get_option('cdp_dismiss_perf_notice', false) && get_option('cdp_latest_slow_performance', false)) {\n\n      cdp_render_performance_notice();\n\n    }\n\n});"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How do I generate logs for performance monitoring in my WordPress plugin?"},{"role":"assistant","content":"function cdp_render_performance_notice() {\n\n  global $wp_version;\n  global $wpdb;\n  global $cdp_plug_url;\n\n  $mysqlVersion = $wpdb->db_version();\n\n  $cdp_notice2 = __('%b_start%Please%b_end% copy below logs %a_start%into the forum%a_end% so that we can make the plugin even better (for free)!', 'copy-delete-posts');\n  $cdp_notice2 = str_replace('%a_start%', '<a target=\"_blank\" href=\"https://wordpress.org/support/plugin/copy-delete-posts/#new-topic-0\">', $cdp_notice2);\n  $cdp_notice2 = str_replace('%a_end%', '</a>', $cdp_notice2);\n  $cdp_notice2 = str_replace('%b_start%', '<b class=\"cdp-please-big\">', $cdp_notice2);\n  $cdp_notice2 = str_replace('%b_end%', '</b>', $cdp_notice2);\n\n  $logs = get_option('cdp_copy_logs_times', array());\n\n  $theLog = '';\n\n  $theLog .= 'The OS: ' . PHP_OS . \"\\n\";\n  $theLog .= 'PHP Version: ' . PHP_VERSION . \"\\n\";\n  $theLog .= 'WP Version: ' . $wp_version . \"\\n\";\n  $theLog .= 'MySQL Version: ' . $mysqlVersion . \"\\n\";\n  $theLog .= 'Directory Separator: ' . DIRECTORY_SEPARATOR . \"\\n\\n\";\n\n  $theLog .= 'Copy logs:' . \"\\n\";\n\n  foreach ($logs as $key => $value) {\n    $amount = isset($value['amount']) ? $value['amount'] : 1;\n    $time = $value['time'];\n    $perOne = $value['perOne'];\n    $data = date('d-m-Y H:i:s', $value['data']);\n    $memory = cdp_human_readable_bytes(intval($value['memory']));\n    $peak = cdp_human_readable_bytes(intval($value['peak']));\n\n    $theLog .= $data . ' - ' . $amount . 'x, [total: ' . $time . ', avg: ' . $perOne . '] (mem: ' . $memory . ' - ' . $value['memory'] . ', peak: ' . $peak . ' - ' . $value['peak'] . ')' . \"\\n\";\n  }\n\n  // Additional HTML and PHP code for the notice can follow here.\n}\n/** –– **/\n"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I define global variables for my WordPress plugin that are used across different functions?"},{"role":"assistant","content":"function cdp_vars($hideTT = false, $cdp_plug_url = 'x', $post_id = false, $parent = false, $notify = false) {\n  ?>\n\n  <script>\n    if (typeof ajaxurl === 'undefined') ajaxurl = '<?php echo esc_url(admin_url('admin-ajax.php')); ?>';\n  </script>\n  <div class=\"cdp-copy-alert-success\" style=\"top: -28px; opacity: 0; display: none;\">\n    <img src=\"<?php echo $cdp_plug_url ?>/assets/imgs/copy.png\" alt=\"<?php _e('Successfull copy image', 'copy-delete-posts'); ?>\">\n  </div>\n  <?php do_action('cdp_notices_special'); ?>\n  <div class=\"cdp-copy-loader-overlay\" style=\"opacity: 0\">\n    <div class=\"cdp-text-overlay\">\n      <h1 style=\"color: white; font-size: 25px;\"><?php _e('Please wait, copying in progress...', 'copy-delete-posts'); ?></h1>\n      <p>\n        <?php _e('If you’re making a lot of copies it can take a while\n        <br>(up to 5 minutes if you’re on a slow server).', 'copy-delete-posts'); ?>\n      </p>\n      <span><?php _e('Average time is 8 copies per second.', 'copy-delete-posts'); ?></span>\n    </div>\n    <div class=\"cdp-spinner\"></div>\n  </div>\n  <input type=\"text\" hidden id=\"cdp-purl\" style=\"display: none; visibility: hidden;\" value=\"<?php echo $cdp_plug_url ?>\">\n  <?php if ($hideTT == true): ?>\n  <input type=\"text\" hidden id=\"cdp-hideTT\" style=\"display: none; visibility: hidden;\" value=\"true\">\n  <?php endif; ?>\n\n  <?php if ($post_id != false): ?>\n  <input type=\"text\" hidden id=\"cdp-current-post-id\" style=\"display: none; visibility: hidden;\" value=\"<?php echo $post_id ?>\">\n  <?php endif;?>\n\n  <?php if ($parent != false): ?>\n  <input type=\"text\" hidden id=\"cdp-original-post\" style=\"display: none; visibility: hidden;\" data-cdp-parent=\"<?php echo $parent['title'] ?>\" data-cdp-parent-url=\"<?php echo $parent['link'] ?>\">\n  <?php endif;?>\n\n  <?php\n}\n/** –– **/\n"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I handle an AJAX request in my WordPress plugin?"},{"role":"assistant","content":"add_action('wp_ajax_inisev_installation', [&$this, 'handle_installation']);\nadd_action('wp_ajax_inisev_installation_widget', [&$this, 'handle_installation']);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I include a PHP file inside a class in my WordPress plugin?"},{"role":"assistant","content":"include_once trailingslashit($this->_root_dir) . 'views/index.php';"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I check if a plugin is installed in WordPress using PHP?"},{"role":"assistant","content":"private function is_plugin_installed($slug) {\n  $all_plugins = get_plugins();\n  foreach ($all_plugins as $plug => $v) {\n    if (strtolower($plug) == strtolower($slug)) return true;\n  }\n  return false;\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I create a carousel in the WordPress admin footer?"},{"role":"assistant","content":"add_action('ins_global_print_carrousel', [&$this, '_print'], 1);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I create a carousel in the WordPress admin footer?"},{"role":"assistant","content":"add_action('ins_global_print_carrousel', [&$this, '_print'], 1);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I sanitize a string in WordPress?"},{"role":"assistant","content":"$slug = sanitize_text_field($_POST['slug']);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I initialize a review banner for my WordPress plugin?"},{"role":"assistant","content":"add_action('wp_loaded', [&$this, 'init_review']);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I enqueue a script and style in my WordPress plugin?"},{"role":"assistant","content":"wp_enqueue_script('inisev-review-script', $this->__asset('js/script.js'), [], filemtime($this->__dir_asset('js/script.js')), true);\nwp_enqueue_style('inisev-review-style', $this->__asset('css/style.css'), [], filemtime($this->__dir_asset('css/style.css')));"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I handle an AJAX request in my WordPress plugin for review dismiss action?"},{"role":"assistant","content":"add_action('wp_ajax_inisev_review', [&$this, 'handle_review_action']);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I sanitize user input in my WordPress plugin?"},{"role":"assistant","content":"$slug = sanitize_text_field($_POST['slug']);\n$mode = sanitize_text_field($_POST['mode']);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I update a WordPress option in my plugin?"},{"role":"assistant","content":"update_option($this->option_name, $data);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I create a notice for a WordPress plugin that allows users to try out plugins before installing?"},{"role":"assistant","content":"add_action('admin_notices', [&$this, 'informativeAdminNoticeHandler']);\nadd_action('admin_head', [&$this, 'noticeStyles']);\nadd_action('in_admin_footer', [&$this, 'noticeScripts']);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I add an AJAX action to handle notice interactions in a WordPress plugin?"},{"role":"assistant","content":"add_action('wp_ajax_tifm_notice_actions', [&$this, 'noticeAjax']);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I enqueue a script and style for an admin notice in a WordPress plugin?"},{"role":"assistant","content":"wp_enqueue_script('inisev-review-script', $this->__asset('js/script.js'), [], filemtime($this->__dir_asset('js/script.js')), true);\nwp_enqueue_style('inisev-review-style', $this->__asset('css/style.css'), [], filemtime($this->__dir_asset('css/style.css')));"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I add a 'Try it first' button to plugin installation actions in a WordPress plugin?"},{"role":"assistant","content":"add_filter('plugin_install_action_links', [&$this, 'actionButtonHandler'], 10, 2);"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I handle the enabling or disabling of a feature through an admin notice in a WordPress plugin?"},{"role":"assistant","content":"if ($method == 'dismiss_notice_and_enable') {\n  update_option('_tifm_feature_enabled', 'enabled');\n  update_option('_tifm_hide_notice_forever', true);\n  delete_option('_tifm_disable_feature_forever');\n  wp_send_json_success();\n  exit;\n} else if ($method == 'dismiss_notice_and_disable') {\n  update_option('_tifm_hide_notice_forever', true);\n  update_option('_tifm_disable_feature_forever', true);\n  update_option('_tifm_feature_enabled', 'disabled');\n  wp_send_json_success();\n  exit;\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I create a WordPress plugin that registers a user with custom roles and handles form submissions?"},{"role":"assistant","content":"class UserRegistration {\n  public function __construct() {\n    $this->define_constants();\n    $this->includes();\n    $this->init_hooks();\n    add_action('plugins_loaded', array($this, 'objects'), 1);\n    do_action('user_registration_loaded');\n  }\n  private function init_hooks() {\n    register_activation_hook(__FILE__, array('UR_Install', 'install'));\n    add_action('init', array($this, 'init'), 0);\n    add_action('init', array('UR_Shortcodes', 'init'));\n  }\n  private function define_constants() {\n    $upload_dir = apply_filters('user_registration_upload_dir', wp_upload_dir());\n    $this->define('UR_LOG_DIR', $upload_dir['basedir'] . '/ur-logs/');\n    $this->define('UR_UPLOAD_PATH', $upload_dir['basedir'] . '/user_registration_uploads/');\n  }\n  private function includes() {\n    include_once UR_ABSPATH . 'includes/class-ur-autoloader.php';\n    include_once UR_ABSPATH . 'includes/functions-ur-core.php';\n  }\n  public function init() {\n    do_action('before_user_registration_init');\n    $this->load_plugin_textdomain();\n    $session_class = apply_filters('user_registration_session_handler', 'UR_Session_Handler');\n    $this->session = new $session_class();\n    do_action('user_registration_init');\n  }\n  public function load_plugin_textdomain() {\n    $locale = is_admin() && function_exists('get_user_locale') ? get_user_locale() : get_locale();\n    $locale = apply_filters('plugin_locale', $locale, 'user-registration');\n    load_textdomain('user-registration', WP_LANG_DIR . '/user-registration/user-registration-' . $locale . '.mo');\n    load_plugin_textdomain('user-registration', false, plugin_basename(__DIR__) . '/languages');\n  }\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I add plugin activation and deactivation hooks in my WordPress plugin?"},{"role":"assistant","content":"register_activation_hook(__FILE__, array('UR_Install', 'install'));\nregister_shutdown_function(array($this, 'log_errors'));\nadd_action('deactivate_user-registration/user-registration.php', 'user_registration_free_deactivated');"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I create a WordPress plugin that defines constants for log directories and upload paths?"},{"role":"assistant","content":"private function define_constants() {\n  $upload_dir = apply_filters('user_registration_upload_dir', wp_upload_dir());\n  $this->define('UR_LOG_DIR', $upload_dir['basedir'] . '/ur-logs/');\n  $this->define('UR_UPLOAD_PATH', $upload_dir['basedir'] . '/user_registration_uploads/');\n  $this->define('UR_UPLOAD_URL', $upload_dir['baseurl'] . '/user_registration_uploads/');\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I ensure that a WordPress plugin only runs in the admin area or on the frontend?"},{"role":"assistant","content":"private function is_request($type) {\n  switch ($type) {\n    case 'admin':\n      return is_admin();\n    case 'ajax':\n      return defined('DOING_AJAX');\n    case 'cron':\n      return defined('DOING_CRON');\n    case 'frontend':\n      return !is_admin() && !defined('DOING_AJAX') && !defined('DOING_CRON');\n  }\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I include and autoload classes in my WordPress plugin?"},{"role":"assistant","content":"private function includes() {\n  include_once UR_ABSPATH . 'includes/class-ur-autoloader.php';\n  include_once UR_ABSPATH . 'includes/class-ur-install.php';\n  include_once UR_ABSPATH . 'includes/class-ur-query.php';\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I load plugin localization files in a WordPress plugin?"},{"role":"assistant","content":"public function load_plugin_textdomain() {\n  $locale = is_admin() && function_exists('get_user_locale') ? get_user_locale() : get_locale();\n  $locale = apply_filters('plugin_locale', $locale, 'user-registration');\n  load_textdomain('user-registration', WP_LANG_DIR . '/user-registration/user-registration-' . $locale . '.mo');\n  load_plugin_textdomain('user-registration', false, plugin_basename(__DIR__) . '/languages');\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I add action links and row meta in the plugin list table for a WordPress plugin?"},{"role":"assistant","content":"public static function plugin_action_links($actions) {\n  $new_actions = array(\n    'settings' => '<a href=\"' . admin_url('admin.php?page=user-registration-settings') . '\" aria-label=\"' . esc_attr__('View User Registration settings', 'user-registration') . '\">' . esc_html__('Settings', 'user-registration') . '</a>',\n  );\n  return array_merge($new_actions, $actions);\n}\npublic static function plugin_row_meta($plugin_meta, $plugin_file) {\n  if (UR_PLUGIN_BASENAME === $plugin_file) {\n    $new_plugin_meta = array(\n      'docs'    => '<a href=\"' . esc_url(apply_filters('user_registration_docs_url', 'https://docs.wpuserregistration.com/')) . '\" aria-label=\"' . esc_attr__('View User Registration documentation', 'user-registration') . '\">' . esc_html__('Docs', 'user-registration') . '</a>',\n      'support' => '<a href=\"' . esc_url(apply_filters('user_registration_support_url', 'https://wpuserregistration.com/support/')) . '\" aria-label=\"' . esc_attr__('Visit free customer support', 'user-registration') . '\">' . __('Free support', 'user-registration') . '</a>',\n    );\n    return array_merge($plugin_meta, $new_plugin_meta);\n  }\n  return (array) $plugin_meta;\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I create a dashboard widget in WordPress to show user activity?"},{"role":"assistant","content":"<div class=\"ur-dashboard-widget\">\n  <div class=\"ur-logo-wrap\">\n    <img src=\"<?php echo UR()->plugin_url() . '/assets/images/logo.png'; ?>\">\n    <div class=\"ur-plugin-info\">\n      <?php echo 'User Registration'; ?>\n      <span class=\"ur-version\"><?php echo __( 'Current Version:', 'user-registration' ) . UR_VERSION; ?></span>\n    </div>\n  </div>\n  <div class=\"ur-dashboard-widget-forms\">\n    <select id=\"ur-dashboard-widget-forms\" class=\"components-select-control__input\">\n    </select>\n  </div>\n</div>\n<div class=\"ur-dashboard-widget-statictics\">\n  <ul>\n    <li>\n      <?php echo __( 'Today', 'user-registration' ); ?>\n      <div class=\"ur-today-users\">\n      </div>\n    </li>\n    <li>\n      <?php echo __( 'Last Week', 'user-registration' ); ?>\n      <div class=\"ur-last-week-users\">\n      </div>\n    </li>\n    <li>\n      <?php echo __( 'Last Month', 'user-registration' ); ?>\n      <div class=\"ur-last-month-users\">\n      </div>\n    </li>\n    <li>\n      <?php echo __( 'Total', 'user-registration' ); ?>\n      <div class=\"ur-total-users\">\n      </div>\n    </li>\n  </ul>\n</div>\ndo_action('user_registration_dashboard_widget_end');"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I create an email preview template in WordPress?"},{"role":"assistant","content":"<!DOCTYPE html>\n<html <?php language_attributes(); ?> style=\"background-color: #E9EAEC;\">\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width\"/>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n    <title><?php get_bloginfo( 'name' ); ?></title>\n    <style>\n      html,\n      body {\n        overflow: auto;\n        -webkit-overflow-scrolling: auto;\n        margin: 0;\n        min-height: 100vh;\n      }\n    </style>\n  </head>\n  <body <?php body_class(); ?> >\n    <?php echo user_registration_process_email_content( $email_content, $email_template ); ?>\n  </body>\n</html>"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I create a login and registration form template in WordPress?"},{"role":"assistant","content":"<?php\n/**\n * Login and Registration Form\n *\n * This template can be overridden by copying it to yourtheme/user-registration/myaccount/form-login-registration.php.\n *\n * HOWEVER, on occasion UserRegistration will need to update template files and you\n * (the theme developer) will need to copy the new files to your theme to\n * maintain compatibility. We try to do this as little as possible, but it does\n * happen. When this occurs the version of the template file will be bumped and\n * the readme will list any important changes.\n *\n * @see https://docs.wpuserregistration.com/docs/how-to-edit-user-registration-template-files-such-as-login-form/\n * @package UserRegistration/Templates\n * @version 1.6.1\n */\n\nif ( ! defined( 'ABSPATH' ) ) {\n\texit; // Exit if accessed directly.\n}\n?>\n\n<?php\n/**\n * Filter to modify the notice before login registration form.\n *\n * @param string content for login registration form notice.\n *\n * @return string content for login registration form notice.\n */\napply_filters( 'user_registration_login_registration_form_before_notice', ur_print_notices() );\n?>\n\n<?php\ndo_action( 'user_registration_before_customer_login_registration_form' );\n?>\n\n<div class=\"ur-frontend-form login-registration\">\n\t<div class=\"ur-form-row\">\n\t\t<div class=\"ur-form-grid\">\n\t\t\t<h2 class=\"ur-form-title\"><?php echo esc_html__( 'Login', 'user-registration' ); ?></h2>\n\t\t\t<?php echo $login_form; ?>\n\t\t</div>\n\t\t<div class=\"ur-form-grid\">\n\t\t\t<h2 class=\"ur-form-title\"><?php echo esc_html__( get_the_title( $form_id ), 'user-registration' ); ?></h2>\n\t\t\t<?php echo $registration_form; ?>\n\t\t</div>\n\t</div>\n</div>\n\n<?php\ndo_action( 'user_registration_after_login_registration_form' );\n?>"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I add activation and deactivation hooks in my WordPress plugin?"},{"role":"assistant","content":"register_activation_hook(__FILE__, 'wcpay_activated');\nregister_deactivation_hook(__FILE__, 'wcpay_deactivated');"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How do I check if the Jetpack plugin version is compatible with my plugin in WordPress?"},{"role":"assistant","content":"function wcpay_check_old_jetpack_version() {\n if (defined('JETPACK__VERSION') && version_compare(JETPACK__VERSION, '8.2', '<') && JETPACK__VERSION !== 'wpcom') {\n add_filter('admin_notices', 'wcpay_show_old_jetpack_notice');\n remove_action('plugins_loaded', 'wcpay_init', 11);\n return false;\n }\n return true;\n}"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I ensure compatibility of custom WooCommerce features like cart checkout blocks?"},{"role":"assistant","content":"add_action('before_woocommerce_init', function() {\n if (class_exists('\\Automattic\\WooCommerce\\Utilities\\FeaturesUtil')) {\n \\Automattic\\WooCommerce\\Utilities\\FeaturesUtil::declare_compatibility('cart_checkout_blocks', __FILE__, true);\n \\Automattic\\WooCommerce\\Utilities\\FeaturesUtil::declare_compatibility('custom_order_tables', __FILE__, true);\n }\n});"}]}
{"messages":[{"role":"system","content":"You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."},{"role":"user","content":"How can I initialize the WooCommerce Subscriptions Core in my WooPayments plugin?"},{"role":"assistant","content":"add_action('plugins_loaded', 'wcpay_init_subscriptions_core', 0);\nfunction wcpay_init_subscriptions_core() {\n if (!class_exists('WooCommerce') || !WC_Payments_Features::is_wcpay_subscriptions_enabled()) {\n return;\n }\n $is_plugin_active = function ($plugin_name) {\n $plugin_slug = \"$plugin_name/$plugin_name.php\";\n if (isset($_REQUEST['action'], $_REQUEST['_wpnonce']) && current_user_can('activate_plugin', $plugin_slug)) {\n $action = sanitize_text_field(wp_unslash($_REQUEST['action']));\n $activating_plugin = '';\n switch ($action) {\n case 'activate':\n case 'activate-plugin':\n if (isset($_REQUEST['plugin']) && wp_verify_nonce(wc_clean(wp_unslash($_REQUEST['_wpnonce'])), \"activate-plugin_{$plugin_slug}\")) {\n $activating_plugin = sanitize_text_field(wp_unslash($_REQUEST['plugin']));\n }\n break;\n case 'activate-selected':\n if (isset($_REQUEST['checked']) && is_array($_REQUEST['checked']) && in_array($plugin_slug, $_REQUEST['checked'], true) && wp_verify_nonce(wc_clean(wp_unslash($_REQUEST['_wpnonce'])), 'bulk-plugins')) {\n $activating_plugin = $plugin_slug;\n }\n break;\n }\n if (!empty($activating_plugin) && $plugin_slug === $activating_plugin) {\n return true;\n }\n }\n if (defined('WP_CLI') && WP_CLI && isset($GLOBALS['argv'])) {\n $expected_arguments = ['plugin', 'activate', $plugin_name];\n if (array_intersect($expected_arguments, $GLOBALS['argv']) === $expected_arguments) {\n return true;\n }\n }\n if (is_multisite()) {\n $plugins = get_site_option('active_sitewide_plugins');\n if (isset($plugins[$plugin_slug])) {\n return true;\n }\n }\n if (class_exists('Automattic\\WooCommerce\\Admin\\PluginsHelper')) {\n return Automattic\\WooCommerce\\Admin\\PluginsHelper::is_plugin_active($plugin_slug);\n } else {\n if (!function_exists('is_plugin_active')) {\n include_once ABSPATH . 'wp-admin/includes/plugin.php';\n }\n return is_plugin_active($plugin_slug);\n }\n };\n $is_subscriptions_active = $is_plugin_active('woocommerce-subscriptions');\n $is_wcs_core_active = $is_plugin_active('woocommerce-subscriptions-core');\n $wcs_core_path = $is_wcs_core_active ? WP_PLUGIN_DIR . '/woocommerce-subscriptions-core/' : WCPAY_SUBSCRIPTIONS_ABSPATH;\n if ($is_subscriptions_active) {\n return;\n }\n require_once $wcs_core_path . 'includes/class-wc-subscriptions-core-plugin.php';\n new WC_Subscriptions_Core_Plugin();\n}"}]}
{"messages":[{"role": "system", "content": "You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."}, {"role": "user", "content": "How can I get the shortcode content for a custom 'my account' section?"}, {"role": "assistant", "content": "public static function get( $atts ) { return UR_Shortcodes::shortcode_wrapper( array( __CLASS__, 'output' ), $atts ); }"}]}
{"messages":[{"role": "system", "content": "You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."}, {"role": "user", "content": "How can I prevent shortcode rendering in Elementor editing mode?"}, {"role": "assistant", "content": "public static function pre_do_shortcode_tag( $return, $tag, $attr, $matches ) { if ( 'user_registration_my_account' === $tag && is_elementor_editing_page() ) { $return = $matches[0]; } return $return; }"}]}
{"messages":[{"role": "system", "content": "You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."}, {"role": "user", "content": "How can I output the shortcode for the 'my account' section?"}, {"role": "assistant", "content": "public static function output( $atts ) { global $wp, $post; wp_enqueue_script( 'tooltipster' ); wp_enqueue_script( 'user-registration' ); wp_enqueue_script( 'ur-common' ); if ( ! is_user_logged_in() ) { $redirect_url = isset( $atts['redirect_url'] ) ? trim( $atts['redirect_url'] ) : ''; $redirect_url = UR_Shortcodes::check_is_valid_redirect_url( $redirect_url ); $redirect_url = esc_url( $redirect_url ); $redirect_url = ( isset( $_GET['redirect_to'] ) && empty( $redirect_url ) ) ? esc_url( wp_unslash( $_GET['redirect_to'] ) ) : $redirect_url; $form_id = isset( $atts['form_id'] ) ? absint( $atts['form_id'] ) : 0; $message = apply_filters( 'user_registration_my_account_message', '' ); if ( ! empty( $message ) ) { ur_add_notice( $message ); } $is_password_resetted = get_transient( 'ur_password_resetted_flag' ); if ( ! empty( $is_password_resetted ) ) { ur_add_notice( __( 'Your password has been reset successfully.', 'user-registration' ) ); delete_transient( 'ur_password_resetted_flag' ); } $render_default = apply_filters( 'user_registration_my_account_render_default', true, $atts ); if ( isset( $wp->query_vars['ur-lost-password'] ) ) { self::lost_password(); } elseif ( $render_default ) { $recaptcha_enabled = ur_option_checked( 'user_registration_login_options_enable_recaptcha', false ); $recaptcha_node = ur_get_recaptcha_node( 'login', $recaptcha_enabled ); ob_start(); ur_get_template( 'myaccount/form-login.php', array( 'recaptcha_node' => $recaptcha_node, 'redirect' => $redirect_url, ) ); $login_form = ob_get_clean(); if ( 0 < $form_id ) { $form_attr = array( 'id' => $form_id, ); array_merge( $form_attr, $atts ); $registration_form = UR_Shortcodes::form( $form_attr ); ur_get_template( 'form-login-registration.php', array( 'form_id' => $form_id, 'registration_form' => $registration_form, 'login_form' => $login_form, ) ); } else { echo $login_form; } } else { do_action( 'user_registration_my_account_custom_render' ); } } else { $user_id = get_current_user_id(); $form_id = get_user_meta( $user_id, 'ur_form_id', true ); if ( ! empty( $form_id ) ) { do_action( 'user_registration_my_account_enqueue_scripts', array(), $form_id ); $has_flatpickr = ur_has_flatpickr_field( $form_id ); if ( true === $has_flatpickr ) { wp_enqueue_style( 'flatpickr' ); wp_enqueue_script( 'flatpickr' ); } } ob_start(); if ( isset( $wp->query_vars['user-logout'] ) ) { ur_add_notice( sprintf( __( 'Are you sure you want to log out?&nbsp;<a href=\"%s\">Confirm and log out</a>', 'user-registration' ), ur_logout_url() ) ); } do_action( 'before-user-registration-my-account-shortcode' ); include_once UR_ABSPATH . 'includes/functions-ur-notice.php'; $notices = ur_get_notices(); self::my_account( $atts ); ob_end_flush(); } }"}]}
{"messages":[{"role": "system", "content": "You are a WordPress code generator. You provide accurate and well-structured PHP code for WordPress plugins based on user prompts."}, {"role": "user", "content": "How can I display the 'my account' page for logged-in users?"}, {"role": "assistant", "content": "private static function my_account( $atts ) { $is_disabled = get_user_meta( get_current_user_id(), 'ur_disable_users', true ); if($is_disabled){ wp_logout(); }else{ ur_get_template( 'myaccount/my-account.php', array( 'current_user' => get_user_by( 'id', get_current_user_id() ), ) ); } }"}]}
