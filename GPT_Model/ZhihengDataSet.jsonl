{"prompt": "Create a 'My Account' shortcode with custom classes and a script enqueue action", "completion": "public static function my_account( $atts ) {\n    do_action( 'user_registration_my_account_enqueue_scripts', array(), 0 );\n    wp_enqueue_script( 'ur-login' );\n\n    return self::shortcode_wrapper(\n        array( 'UR_Shortcode_My_Account', 'output' ),\n        $atts,\n        apply_filters(\n            'user_registration_my_account_shortcode',\n            array(\n                'class'  => 'custom-user-registration',\n                'before' => '<div>',\n                'after'  => '</div>',\n            )\n        )\n    );\n}"}
{"prompt": "Create a 'Login' shortcode with custom classes and a script enqueue action", "completion": "public static function login( $atts ) {\n    do_action( 'user_registration_my_account_enqueue_scripts', array(), 0 );\n    wp_enqueue_script( 'ur-login' );\n\n    return self::shortcode_wrapper(\n        array( 'UR_Shortcode_Login', 'output' ),\n        $atts,\n        apply_filters(\n            'user_registration_login_shortcode',\n            array(\n                'class'  => 'custom-user-registration',\n                'before' => '<div>',\n                'after'  => '</div>',\n            )\n        )\n    );\n}"}
{"prompt": "Create an 'Edit Password' shortcode with script enqueue and callback wrapper", "completion": "public static function edit_password( $atts ) {\n    return self::shortcode_wrapper( array( __CLASS__, 'render_edit_password' ), $atts );\n}\n\npublic static function render_edit_password() {\n    if ( is_user_logged_in() ) {\n        include_once 'shortcodes/class-ur-shortcode-my-account.php';\n        UR_Shortcode_My_Account::edit_password();\n    } else {\n        do_action( 'user_registration_edit_password_shortcode' );\n        echo wp_kses_post( apply_filters( 'user_registration_edit_password_shortcode_message', sprintf( __( 'Please Login to edit password. <a href=\"%s\">Login Here?</a>', 'user-registration' ), ur_get_my_account_url() ) ) );\n    }\n}"}
{"prompt": "Create an 'Edit Profile' shortcode with custom script enqueue logic", "completion": "public static function edit_profile( $atts ) {\n    return self::shortcode_wrapper( array( __CLASS__, 'render_edit_profile' ), $atts );\n}\n\nprivate static function render_edit_profile() {\n    $user_id = get_current_user_id();\n    $form_id = get_user_meta( $user_id, 'ur_form_id', true );\n    do_action( 'user_registration_my_account_enqueue_scripts', array(), $form_id );\n    $has_flatpickr = ur_has_flatpickr_field( $form_id );\n\n    if ( true === $has_flatpickr ) {\n        wp_enqueue_style( 'flatpickr' );\n        wp_enqueue_script( 'flatpickr' );\n    }\n\n    if ( ! is_user_logged_in() ) {\n        echo wp_kses_post( apply_filters( 'user_registration_logged_in_message', sprintf( __( 'Please Login to edit profile. <a href=\"%s\">Login Here?</a>', 'user-registration' ), wp_login_url() ) ) );\n    } else {\n        include_once 'shortcodes/class-ur-shortcode-my-account.php';\n        UR_Shortcode_My_Account::edit_profile();\n    }\n}"}
{"prompt": "Create a 'Registration Form' shortcode with custom capability checks and smart tag processing", "completion": "public static function form( $atts ) {\n    if ( empty( $atts ) || ! isset( $atts['id'] ) ) {\n        return '';\n    }\n\n    $users_can_register = apply_filters( 'ur_register_setting_override', get_option( 'users_can_register' ) );\n\n    if ( ! is_user_logged_in() ) {\n        if ( ! $users_can_register ) {\n            return apply_filters( 'ur_register_pre_form_message', '<p class=\\\"alert\\\">' . __( 'Only administrators can add new users.', 'user-registration' ) . '</p>' );\n        }\n    } else {\n        $current_user_capability = apply_filters( 'ur_registration_user_capability', 'create_users' );\n        if ( ! current_user_can( $current_user_capability ) ) {\n            return apply_filters( 'ur_register_pre_form_message', '<p class=\\\"alert\\\">' . sprintf( __( 'You are currently logged in as %s.', 'user-registration' ), wp_get_current_user()->display_name ) . '</p>' );\n        }\n    }\n\n    $atts = shortcode_atts(\n        array(\n            'id' => '',\n        ),\n        $atts,\n        'user_registration_form'\n    );\n\n    do_action( 'user_registration_form_shortcode_scripts', $atts );\n\n    ob_start();\n    self::render_form( $atts['id'] );\n    return ob_get_clean();\n}\n\nprivate static function render_form( $form_id ) {\n    $form_data_array = UR()->form->get_form( $form_id, array( 'content_only' => true ) );\n    $content = apply_filters( 'user_registration_process_smart_tags', wp_json_encode( $form_data_array ), array(), array() );\n    $form_data_array = json_decode( $content );\n\n    wp_enqueue_script( 'user-registration' );\n    wp_enqueue_script( 'ur-form-validator' );\n    wp_enqueue_script( 'ur-common' );\n\n    do_action( 'user_registration_enqueue_scripts', $form_data_array, $form_id );\n\n    ur_get_template( 'form-registration.php', array( 'form_data_array' => $form_data_array ) );\n}"}
{"prompt": "Limit media library access to own uploads","completion": "function ur_show_current_user_attachments( $query ) {\n    $user_id = get_current_user_id();\n\n    if ( $user_id && ! current_user_can( 'edit_others_posts' ) ) {\n        $query['author'] = $user_id;\n    }\n\n    return $query;\n}"}
{"prompt": "Modify error message on invalid username or password","completion": "function ur_login_error_message( $error ) {\n    if ( isset( $_POST['redirect_to'] ) && false !== strpos( wp_unslash( $_POST['redirect_to'] ), network_admin_url() ) ) {\n        return $error;\n    }\n\n    $pos  = strpos( $error, 'incorrect' );\n    $pos2 = strpos( $error, 'Invalid' );\n\n    if ( is_int( $pos ) && isset( $_POST['username'] ) ) {\n        $error = sprintf( '<strong>' . __( 'ERROR:', 'user-registration' ) . '</strong>' . __( 'The password you entered for username %1$1s is incorrect. %2$2s', 'user-registration' ), sanitize_text_field( wp_unslash( $_POST['username'] ) ), \"<a href='\" . esc_url( wp_lostpassword_url() ) . \"'>\" . __( 'Lost Your Password?', 'user-registration' ) . '</a>' );\n    } elseif ( is_int( $pos2 ) && isset( $_POST['username'] ) ) {\n        $error = sprintf( '<strong>' . __( 'ERROR:', 'user-registration' ) . '</strong>' . __( 'Invalid username. %1s', 'user-registration' ), \"<a href='\" . esc_url( wp_lostpassword_url() ) . \"'>\" . __( 'Lost Your Password?', 'user-registration' ) . '</a>' );\n    }\n\n    return $error;\n}"}
{"prompt": "Returns the URL to the lost password endpoint URL","completion": "function ur_lostpassword_url( $default_url = '' ) {\n    if ( is_multisite() && isset( $_GET['redirect_to'] ) && false !== strpos( wp_unslash( $_GET['redirect_to'] ), network_admin_url() ) ) {\n        return $default_url;\n    }\n\n    if ( 'wp-login.php' === $GLOBALS['pagenow'] ) {\n        return $default_url;\n    }\n\n    $ur_account_page_url = ur_get_page_permalink( 'myaccount' );\n    $ur_account_page_exists = ur_get_page_id( 'myaccount' ) > 0;\n    $lost_password_endpoint = get_option( 'user_registration_myaccount_lost_password_endpoint', 'lost-password' );\n    $ur_login_page_exists = ur_get_page_id( 'login' ) > 0;\n\n    if ( ! $ur_account_page_exists && $ur_login_page_exists ) {\n        update_option( 'user_registration_login_page_id', ur_get_page_id( 'login' ) );\n    }\n\n    if ( $ur_account_page_exists && ! empty( $lost_password_endpoint ) ) {\n        return ur_get_endpoint_url( $lost_password_endpoint, '', $ur_account_page_url );\n    } elseif ( $ur_login_page_exists && ! empty( $lost_password_endpoint ) ) {\n        return ur_get_endpoint_url( $lost_password_endpoint, '', get_permalink( ur_get_page_id( 'login' ) ) );\n    } elseif ( ! empty( $lost_password_endpoint ) && 'lost-password' !== $lost_password_endpoint ) {\n        return str_replace( 'lost-password', $lost_password_endpoint, $default_url );\n    } else {\n        return $default_url;\n    }\n}"}
{"prompt": "Get My Account menu items","completion": "function ur_get_account_menu_items() {\n    $endpoints = array(\n        'edit-profile'  => get_option( 'user_registration_myaccount_edit_profile_endpoint', 'edit-profile' ),\n        'edit-password' => get_option( 'user_registration_myaccount_change_password_endpoint', 'edit-password' ),\n        'user-logout'   => get_option( 'user_registration_logout_endpoint', 'user-logout' ),\n    );\n\n    $items = array(\n        'dashboard'     => __( 'Dashboard', 'user-registration' ),\n        'edit-profile'  => __( 'Profile Details', 'user-registration' ),\n        'edit-password' => __( 'Change Password', 'user-registration' ),\n        'user-logout'   => __( 'Logout', 'user-registration' ),\n    );\n\n    $user_id = get_current_user_id();\n    $form_id = ur_get_form_id_by_userid( $user_id );\n    $profile = user_registration_form_data( $user_id, $form_id );\n\n    if ( count( $profile ) < 1 ) {\n        unset( $items['edit-profile'] );\n    }\n\n    foreach ( $endpoints as $endpoint_id => $endpoint ) {\n        if ( empty( $endpoint ) ) {\n            unset( $items[ $endpoint_id ] );\n        }\n    }\n\n    return apply_filters( 'user_registration_account_menu_items', $items );\n}"}
{"prompt": "Get account menu item classes","completion": "function ur_get_account_menu_item_classes( $endpoint ) {\n    global $wp;\n\n    $classes = array(\n        'user-registration-MyAccount-navigation-link',\n        'user-registration-MyAccount-navigation-link--' . $endpoint,\n    );\n\n    $current = isset( $wp->query_vars[ $endpoint ] );\n    if ( 'dashboard' === $endpoint && ( isset( $wp->query_vars['page'] ) || empty( $wp->query_vars ) ) ) {\n        $current = true;\n    }\n\n    if ( $current ) {\n        $classes[] = 'is-active';\n    }\n\n    $classes = apply_filters( 'user_registration_account_menu_item_classes', $classes, $endpoint );\n\n    return implode( ' ', array_map( 'sanitize_html_class', $classes ) );\n}"}
{"prompt": "Get account endpoint URL","completion": "function ur_get_account_endpoint_url( $endpoint ) {\n    if ( 'dashboard' === $endpoint ) {\n        return ur_get_page_permalink( 'myaccount' );\n    }\n    if ( 'user-logout' === $endpoint ) {\n        if ( get_option( 'user_registration_logout_endpoint', 'user-logout' ) === $endpoint && ur_option_checked( 'user_registration_disable_logout_confirmation', false ) ) {\n            return ur_logout_url( ur_get_page_permalink( 'myaccount' ) );\n        }\n    }\n\n    return ur_get_endpoint_url( $endpoint, '', ur_get_page_permalink( 'myaccount' ) );\n}"}