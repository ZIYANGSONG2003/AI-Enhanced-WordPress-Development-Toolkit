body,html{

  overflow: hidden;         /* overflow: hidden; prevents scrolling on both the x (horizontal) and y (vertical) axes */
  height: 100vh;

}
.appContainer {
  display: flex;          /* display: flex; changes the display behavior of the element to a flexible box (flexbox). */
}
.mainContent {                /* .mainContent block is designed to create a primary content area that occupies */
  position: relative;         /* a significant portion of the screen, with flexible dimensions and a layout */
  width:85%;                  /* optimized for readability and organization. */
  flex-grow: 1; /* Take the remaining space */
  display: flex;
  flex-direction: column;
  height: 100vh; /* Adjust height to the full view */

  /*justify-content: center;*/
  /*align-items: center;*/

  /*overflow: hidden; !* Prevents the outer container from scrolling *!*/

}
.container {                /* It wraps site content, centering it within the viewport and providing consistent margins or padding. */
  margin-left: 20px;
  /*flex-grow: 1;*/
  padding: 20px;
  /*display: flex;*/
  flex-direction: column;
  overflow-y: auto;
  max-height: 85%;
}
.inputArea {                /*  style a fixed-position input area at the bottom of the webpage */
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 100%; /* Ensure it spans the width of the page */
  max-width: 768px; /* Set a max-width for larger screens */
  padding: 10px 0;
  z-index: 2; /* Ensure it's above other elements */
  padding: 10px 0; /* Add padding as needed */

  max-height: 15%;
}
.textInputWrapper {         /* Creates a wrapper for text input field */
  display: flex;
  align-items: center;
  background: #FFF;
  border: 1px solid #CCC; /* Light grey border */
  border-radius: 20px; /* Rounded corners for the wrapper */

  border-right: none; /* Remove border between the icon and the text input */
  overflow: hidden; /* Ensures the inner elements conform to the wrapper's border-radius */
  flex-grow: 1;
}
.inputIcon {          /* Used to define styling for icons within input fields */
  padding: 10px;

  color: black;
  font-size: 16px; /* Adjust icon size as needed */

}
.textInput {        /* Used to define styling for text input fields */
  flex-grow: 1;
  border: none;
  padding: 10px 15px;
  margin-right: 10px;
  font-size: 16px; /* Match the font size to the icon size */

  border-radius: 20px; /* Rounded corners for the text input */
}
.disclaimer {           /* defines the styling for the disclaimer message within the webpage */
  text-align: center;
  font-size: 0.75em;
  padding-top: 5px;
  width: 100%; /* Match the width of the inputArea */
}


.submitBtn {            /* Defines styling for the submit button */
  background-color:  #007bff;
  border: none;
  color: white;
  padding: 3px 6px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 6px 12px; /* Slight margin for the button */
  cursor: pointer;
  border-radius: 50%; /* Circular shape for the button */
  width: 30px; /* Fixed width for the circle */
  height: 30px; /* Fixed height for the circle */
  align-items: center;
  justify-content: center;
  transition: background-color 0.3s; /* Smooth transition for mouse hover */

}
.textInput:focus, .submitBtn:focus {    /* defines styling for the focus state of text input fields and submit buttons */
  outline: none;              /* Removes the default browser outline around elements when they receive focus*/
}


.logoArea {         /* represents the container for the logo */
  text-align: center;
  margin-bottom: 20px; /* Adjust as needed */
}

.logo {           /* represents the logo image itself */
  margin: 0 auto; /* Centers the button in the container */
  max-width: 100px; /* Adjust as needed */
  height: auto;

  /* Other styles to match your design */
}

.fetchBtn{         /* Defines styling for the button element used to fetch data/perform some other action*/
  background-color: #007bff; /* Button color */
  color: white; /* Text color */
  border: none; /* No border */
  border-radius: 50%; /* Circular button */
  cursor: pointer;
  padding: 10px;
  width: 40px; /* Width for circular shape */
  height: 40px; /* Height for circular shape */
  font-size: 24px; /* Size of the arrow icon */
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 20px; /* Center button horizontally, add margin below */
  outline: none;

}

.submitBtn:focus {    /*Removes the outline of the submit button when it receives focus */
  outline: none;
}


/* The below two blocks define the behaviour of the buttons when the cursor is hovered over them */
.fetchBtn:hover{
  background-color:#007bff; /* Darker shade on hover */

}

.submitBtn:hover{
  background-color:  #007bff; /* Darker green on hover */;
}


.serverResponse, .pluginsList {

  margin-top: 20px;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  width: 300px; /* Adjust the width as needed */
}

.pluginsList ul {
  list-style-type: none;
  padding: 0;
}

.pluginsList li {
  padding: 5px;
  border-bottom: 1px solid #eee;
}

.pluginsList li:last-child {
  border-bottom: none;
}

.appContainer {
  display: flex;    /*enables flex box layout properties to be applied to its children */
  flex-direction: row;
  align-items: flex-start;
  justify-content: center;
  padding: 20px;
}

.sidebar {        /* defines the styling for the sidebar element */
  width: 15%; /* Adjust the width as needed */
  background-color: #f4f4f4; /* Adjust the background color as needed */
  padding: 20px;
  margin-right: 20px;
  height: 100vh; /* Adjust the height to cover the entire viewport height */
  overflow-y: auto; /* Allow scrolling if the list is long */
}




.sidebarButton {    /* defines styling for buttons used within the sidebar */
  display: block;
  width: 100%;
  padding: 10px;
  margin-bottom: 10px;
  font-size: 16px;
  color: white;
  background-color: #007bff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.sidebarButton:hover {      /*defines the behaviour of the sidebar buttons when the cursor is hovered */
  background-color: #0056b3;
}

.chatPreview {   /* styling the display previews of chat messages */
  padding: 10px;
  border-bottom: 1px solid #ccc;
  cursor: pointer;
}

.chatPreview:hover {   /* Changes the background color of the .chatPreview elements to a light gray when hovered over */
  background-color: #e9e9e9;
}

.chatPreview.active {
  background-color: #007bff;    /* Sets the background color of active .chatPreview elements to a shade of blue */
  color: white;               /*  Sets the text color of active .chatPreview elements to white to ensures the text remains */
}                               /* readable against the blue background.*/



/*
new css style about the chat dialog
 */
.message {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.userMessageWrapper {       /*  ensures that the user's icon and their message text are aligned vertically at the bottom */
  display: flex;
  align-items: flex-end; /* Aligns the icon and text at their bottom edge */
}

.user .messageContent {     /*  styles the message content area for user messages in the chat interface*/
  background-color: #e5e5ea;
  border-radius: 18px;
  padding: 10px 15px;
  margin-left: 10px; /* Add space between icon and message */
  overflow-wrap: break-word; /* Ensure the text wraps within the bubble */
}

.server .messageText {        /* styles the message text area for server messages in the chat interface.*/
  background-color: #f4f4f8;
  border-radius: 18px;
  padding: 10px 15px;
  margin-left: auto; /* Align server messages to the right */
  overflow-wrap: break-word; /* Ensure the text wraps within the bubble */
}

.userIcon {     /* used to style user icons within the chat interface */
  width: 30px;
  height: 30px;
  flex-shrink: 0; /* Prevent the icon from shrinking */

  margin-right: 10px; /* Space between icon and message content */


}

.messageContent { /* used to style the content area of messages within the chat interface*/
  font-size: 13px;
  line-height: 1.4;
  max-width: calc(100% - 50px); /* Subtract the width of the icon and margins */
}

/* Add more styling here as needed */
